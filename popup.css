/* popup.css */
body {
  font-family: Arial, sans-serif;
  display: flex;
  flex-direction: column; /* Display children elements in a column */
  align-items: center; /* Center horizontally */
  justify-content: center; /* Center vertically */
  height: 560px; /* Increased height to accommodate the "Nuance" part and new buttons*/
  background: linear-gradient(to right bottom, #666666, #111111); /* Darker initial color */
}

.buttons-container {
  display: flex; /* Display buttons side by side */
  margin-bottom: 10px; /* Add margin at the bottom to separate from "Nuance" part */
}

button {
  padding: 10px 20px;
  width: 120px; /* Fixed width to make buttons the same size */
  background-color: #00b300;
  color: #ffffff;
  font-size: 14px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  margin: 10px; /* Increased margin for better spacing */
}

/* Brighter glowing animation */
.glow-on-hover {
  transition: 0.3s ease;
  box-shadow: 0 0 10px #00ff00; /* Brighter glow color */
}

.glow-on-hover:hover {
  box-shadow: 0 0 30px #00ff00; /* Even brighter glow on hover */
}

/* Small, thin, almost transparent title */
.nuance-title {
  font-size: 7px;
  font-weight: bold;
  color: rgba(255, 255, 255, 0.3);
}

/*       Just setting CSS for the page   */

* {
  margin: 0;
  padding: 0;
}


#text{
  letter-spacing: 0px;
  transition: 0.5s;
}

#text:hover
{
 letter-spacing: 3px;
 transition: 0.5s;
 transition-delay: 1.1s;
 text-shadow:1px 1px 10px #06D6A0;, 1px 1px 10px #ccc;

}

html,
css {
  width: 100%;
  height: 100%;
}

.position {
  margin-left: auto;
  margin-right: auto;
  text-align: center;
  margin-top: 15%;
}

#workarea {
}

#personal {
  color:white;
  text-decoration:none;
  position:absolute;
  bottom:15px;
  right:2%;
}
/*    start code for the actual button:         */


/*   
    Spot is the span on the inside of the href that
    fills the parent and makes the hover and link work
    for the entire div
*/

.spot {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
}
/*
    This is the outer svg wrapper that the SVG itself will 
    fill. Multiple svg-wrapper classes can be put side by side.
*/

.svg-wrapper {
  margin-top: 0;
  position: relative;
  width: 150px;
  /*make sure to use same height/width as in the html*/
  height: 40px;
  display: inline-block;
  border-radius: 3px;
  margin-left: 5px;
  margin-right: 5px
}
/*
  This is where we define the fill, color, thickness,
  and stroke pattern of the SVG when there is no hover.
  The dasharray and offset together define the line position
  under the words. Here's also where the transition speed is set.
*/

#shape {
  stroke-width: 2px;
  fill: rgba(0, 0, 0, 0.2);
  stroke: #555555;
  stroke-dasharray: 100 400;
  stroke-dashoffset: -220;
  transition: 1.1s all ease;
}
/* 
    Pushing the text up into the SVG. Without this the
    text would be below the div's.
*/

#text {
  margin-top: -30px;
  text-align: center;
}

#text a {
  color: white;
  text-decoration: none;
  font-weight: 100;
  font-size: 1.1em;
}
/* 
    Changing the shape on hover. I change the color of the stroke,
make it thinner, then set it to again wrap around the entire parent element.
*/

.svg-wrapper:hover #shape {
  stroke-dasharray: 50 0;
  stroke-width: 3px;
  stroke-dashoffset: 0;
  stroke: #06D6A0;
}
@keyframes lightUpAnimation {
  0% {
    background-color: rgba(255,255,255,0.2); /* Start with the "super bright" color */
  }
  100% {
    background-color: #linear-gradient(to right bottom, #666666, #111111); /* Return to the original color */
  }
}

.svg-wrapper.light-up {
  /* Start the animation when the class is added */
  animation: lightUpAnimation 2s;
  /* Customize the effect to your preference */

